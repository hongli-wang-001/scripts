analysis:
  start_time: '2020-09-01-00:00:00'
  end_time:  '2020-09-20-23:00:00'    #UTC #
  output_dir: /scratch1/BMC/acomp/Johana/for_Haiqin/MONET/CTRL_run/multiday_AOD 
  debug: True
model:
  RRFS-SD_00Z: # model label
    #files: /scratch1/BMC/acomp/Johana/for_Haiqin/MONET/model_out/2020090600/phyf*
    files: /scratch1/BMC/acomp/Johana/for_Haiqin/MONET/CTRL_run/multiday_AOD/dynf_20200901_20200920.nc  
    mod_type: 'rrfs'
    mod_kwargs:
      surf_only: True
      convert_pm25: False 
    radius_of_influence: 12000 #meters
    mapping: #model species name : obs species name
      aeronet:
        aodtot: "aod_550nm"
    projection: None
    plot_kwargs: #Opt
      color: 'indigo'
      marker: 'o'
      linestyle: '--'
      markersize: 3
      linewidth: 1.5

obs:
  aeronet: # obs label
    use_airnow: False
    filename: /scratch1/BMC/acomp/Johana/MONET/AERONET_2020-09-01_2020-09-20.nc  
    obs_type: pt_sfc
    variables: #Opt
      aod_550nm:
        unit_scale: 1
        unit_scale_method: '*' # Multiply = '*' , Add = '+', subtract = '-', divide = '/'
        nan_value: -1.0 # Set this value to NaN
        #The obs_min, obs_max, and nan_values are set to NaN first and then the unit conversion is applied.
        ylabel_plot: 'Aeronet 550nm AOD' #Optional to set ylabel so can include units and/or instr etc.
        ty_scale: 2.0 #Opt
        vmin_plot: 0.0 #Opt Min for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
        vmax_plot: 22.0 #Opt Max for y-axis during plotting. To apply to a plot, change restrict_yaxis = True.
        vdiff_plot: 15.0 #Opt +/- range to use in bias plots. To apply to a plot, change restrict_yaxis = True.
        nlevels_plot: 23 #Opt number of levels used in colorbar for contourf plot.

plots:
  plot_grp1:
    type: 'timeseries' # plot type
    fig_kwargs: #Opt to define figure options
      figsize: [12,6] # figure size if multiple plots
    default_plot_kwargs: # Opt to define defaults for all plots. Model kwargs overwrite these.
      linewidth: 3.0
      markersize: 10.
    text_kwargs: #Opt
      fontsize: 18.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.)
    domain_name: ['CONUS'] #List of domain names. If domain_type = all domain_name is used in plot title.
    data: ['aeronet_RRFS-SD_00Z']
    data_proc:
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      ts_select_time: 'time' #Time used for avg and plotting: Options: 'time' for UTC or 'time_local'
      ts_avg_window: 'H' # Options: None for no averaging or list pandas resample rule (e.g., 'H', 'D')
      set_axis: False #If select True, add vmin_plot and vmax_plot for each variable in obs.

  plot_grp3:
    type: 'spatial_bias' # plot type
    fig_kwargs: #For all spatial plots, specify map_kwargs here too.
      states: True
      figsize: [10, 5] # figure size 
    text_kwargs: #Opt
      fontsize: 16.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.)
    domain_name: ['CONUS'] #L
    data: ['aeronet_RRFS-SD_00Z'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      ts_avg_window: 'D' # Options: None for no averaging or list pandas resample rule (e.g., 'H', 'D')
      set_axis: False #If select True, add vdiff_plot for each variable in obs.

  plot_grp4:
    type: 'spatial_overlay' # plot type
    fig_kwargs: #For all spatial plots, specify map_kwargs here too.
      states: True
      figsize: [10, 5] # figure size 
    text_kwargs: #Opt
      fontsize: 16.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.)
    domain_name: ['CONUS'] #L  
    data: ['aeronet_RRFS-SD_00Z'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      ts_select_time: 'time' #Time used for avg and plotting: Options: 'time' for UTC or 'time_local'
      ts_avg_window: 'D' # Options: None for no averaging or list pandas resample rule (e.g., 'H', 'D')
      set_axis: False #If select True, add vmin_plot and vmax_plot for each variable in obs.

  plot_grp5:
    type: 'boxplot' # plot type
    fig_kwargs: #Opt to define figure options
      figsize: [8, 6] # figure size 
    text_kwargs: #Opt
      fontsize: 10.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.)
    domain_name: ['CONUS'] #L
    data: ['aeronet_RRFS-SD_00Z']
    data_proc:
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      set_axis: False #If select True, add vmin_plot and vmax_plot for each variable in obs.

  plot_grp6:
    type: 'spatial_bias_exceedance' # plot type
    fig_kwargs: #For all spatial plots, specify map_kwargs here too.
      states: True
      figsize: [10, 5] # figure size 
    text_kwargs: #Opt
      fontsize: 16.
    domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.)
    domain_name: ['CONUS'] #L
    data: ['aeronet_RRFS-SD_00Z'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
    data_proc:
      rem_obs_nan: True # True: Remove all points where model or obs variable is NaN. False: Remove only points where model variable is NaN.
      set_axis: False #If select True, add vdiff_plot for each variable in obs.

stats:
  #Stats require positive numbers, so if you want to calculate temperature use Kelvin!
  #Wind direction has special calculations for AirNow if obs name is 'WD'
  stat_list: ['STDO', 'STDP', 'MdnNB', 'NO','NOP','NP','MO','MP', 'MdnO', 'MdnP', 'RM', 'RMdn', 'MB', 'MdnB', 'NMB', 'NMdnB', 'FB', 'NME', 'R2', 'RMSE', 'IOA', 'AC'] #List stats to calculate. Dictionary of definitions included in plots/proc_stats.py Only stats listed below are currently working.
  #stat_list: ['MB']
  #Full calc list ['STDO', 'STDP', 'MdnNB', 'NO','NOP','NP','MO','MP', 'MdnO', 'MdnP', 'RM', 'RMdn', 'MB', 'MdnB', 'NMB', 'NMdnB', 'FB', 'NME', 'R2', 'RMSE', 'IOA', 'AC']
  round_output: 2 #Opt, defaults to rounding to 3rd decimal place.
  output_table: True #Always outputs a .txt file. Optional to also output as a table.
  output_table_kwargs: #Opt For all spatial plots, specify map_kwargs here too.
    figsize: [8, 11] # figure size 
    fontsize: 12.
    xscale: 1.1
    yscale: 1.1
    edges: 'horizontal'
  domain_type: ['all'] #List of domain types: 'all' or any domain in obs file. (e.g., airnow: epa_region, state_name, siteid, etc.) 
  domain_name: ['CONUS'] #List of domain names. If domain_type = all domain_name is used in plot title.
  data: ['aeronet_RRFS-SD_00Z'] # make this a list of pairs in obs_model where the obs is the obs label and model is the model_label
